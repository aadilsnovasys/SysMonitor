name: System Resource Check

on:
  push:
    branches:
      - main

jobs:
  check-resources:
    runs-on: self-hosted
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psutil
        
    - name: Create resource check script
      shell: pwsh
      run: |
        $script = @'
        import psutil
        import sys
        
        def format_output(usage_type, value):
            return f"{usage_type}: {value:.1f}%"
        
        try:
            # Get CPU usage percentage (average over 1 second)
            cpu_usage = psutil.cpu_percent(interval=1)
            
            # Get memory usage percentage
            memory = psutil.virtual_memory()
            memory_usage = memory.percent
            
            # Print current usage for logging
            print("Current system resource usage:")
            print(format_output("CPU Usage", cpu_usage))
            print(format_output("Memory Usage", memory_usage))
            
            # Check if usage is in critical interval (40-60%)
            critical_resources = []
            
            if 40 <= cpu_usage <= 60:
                critical_resources.append(format_output("CPU Usage", cpu_usage))
            
            if 2 <= memory_usage <= 7:
                critical_resources.append(format_output("Memory Usage", memory_usage))
            
            if critical_resources:
                error_message = "Resource usage in critical interval (40-60%):\n"
                error_message += "\n".join(critical_resources)
                print(f"::error::{error_message}")
                sys.exit(1)
                
            print("All resources are outside critical interval")
            sys.exit(0)
            
        except Exception as e:
            print(f"::error::Error monitoring system resources: {str(e)}")
            sys.exit(1)
        '@
        
        $script | Out-File -FilePath "check_resources.py" -Encoding UTF8
        
    - name: Run resource check
      id: resource-check
      shell: pwsh
      run: python check_resources.py
      continue-on-error: true
      
    - name: Check step outcome
      if: steps.resource-check.outcome == 'failure'
      shell: pwsh
      run: |
        Write-Host "Resource check failed - Usage in critical interval"
        exit 1
